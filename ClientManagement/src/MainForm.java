/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.SQLException;
/**
 *
 * @author marav
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableClients = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        fieldCID = new javax.swing.JTextField();
        fieldCC = new javax.swing.JTextField();
        fieldCN = new javax.swing.JTextField();
        fieldCA = new javax.swing.JTextField();
        fieldTech = new javax.swing.JTextField();
        fieldTC = new javax.swing.JTextField();
        fieldS = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        Deletebtn = new javax.swing.JButton();
        Updatebtn = new javax.swing.JButton();
        Searchbtn = new javax.swing.JButton();
        Addbtn = new javax.swing.JButton();
        Clearbtn = new javax.swing.JButton();
        fieldEmail = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 255, 204));

        tableClients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Client_ID", "C_Name", "C_Contacts", "C_Address", "Technician", "T_Phone", "Services", "EmailAdd"
            }
        ));
        jScrollPane1.setViewportView(tableClients);

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel1.setText("Client ID:");

        jLabel2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel2.setText("Technician Contacts:");

        jLabel3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel3.setText("Technician:");

        jLabel4.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel4.setText("Client Address:");

        jLabel5.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel5.setText("Client Contacts:");

        jLabel6.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel6.setText("Client Name:");

        jLabel7.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel7.setText("Services:");

        fieldCID.setBackground(new java.awt.Color(255, 204, 204));
        fieldCID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldCIDActionPerformed(evt);
            }
        });

        fieldCC.setBackground(new java.awt.Color(255, 204, 204));
        fieldCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldCCActionPerformed(evt);
            }
        });

        fieldCN.setBackground(new java.awt.Color(255, 204, 204));
        fieldCN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldCNActionPerformed(evt);
            }
        });

        fieldCA.setBackground(new java.awt.Color(255, 204, 204));
        fieldCA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldCAActionPerformed(evt);
            }
        });

        fieldTech.setBackground(new java.awt.Color(255, 204, 204));

        fieldTC.setBackground(new java.awt.Color(255, 204, 204));

        fieldS.setBackground(new java.awt.Color(255, 204, 204));
        fieldS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldSActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Snap ITC", 1, 24)); // NOI18N
        jLabel8.setText("Client Management Systems");

        Deletebtn.setBackground(new java.awt.Color(255, 204, 204));
        Deletebtn.setFont(new java.awt.Font("Serif", 0, 24)); // NOI18N
        Deletebtn.setForeground(new java.awt.Color(102, 51, 0));
        Deletebtn.setText("Delete");
        Deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletebtnActionPerformed(evt);
            }
        });

        Updatebtn.setBackground(new java.awt.Color(255, 204, 204));
        Updatebtn.setFont(new java.awt.Font("Serif", 0, 24)); // NOI18N
        Updatebtn.setForeground(new java.awt.Color(102, 51, 0));
        Updatebtn.setText("Update");
        Updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdatebtnActionPerformed(evt);
            }
        });

        Searchbtn.setBackground(new java.awt.Color(255, 204, 204));
        Searchbtn.setFont(new java.awt.Font("Serif", 0, 24)); // NOI18N
        Searchbtn.setForeground(new java.awt.Color(102, 51, 0));
        Searchbtn.setText("Search");
        Searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchbtnActionPerformed(evt);
            }
        });

        Addbtn.setBackground(new java.awt.Color(255, 204, 204));
        Addbtn.setFont(new java.awt.Font("Serif", 0, 24)); // NOI18N
        Addbtn.setForeground(new java.awt.Color(102, 51, 0));
        Addbtn.setText("Add");
        Addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddbtnActionPerformed(evt);
            }
        });

        Clearbtn.setBackground(new java.awt.Color(255, 204, 204));
        Clearbtn.setFont(new java.awt.Font("Serif", 0, 24)); // NOI18N
        Clearbtn.setForeground(new java.awt.Color(102, 51, 0));
        Clearbtn.setText("Clear");
        Clearbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearbtnActionPerformed(evt);
            }
        });

        fieldEmail.setBackground(new java.awt.Color(255, 204, 204));
        fieldEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldEmailActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel9.setText("EmailAdd:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fieldTC, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                            .addComponent(fieldCN, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                            .addComponent(fieldCID, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                            .addComponent(fieldCC, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                            .addComponent(fieldCA, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                            .addComponent(fieldTech, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                            .addComponent(fieldS, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                            .addComponent(fieldEmail))
                        .addGap(47, 47, 47))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(Deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(Updatebtn)
                .addGap(35, 35, 35)
                .addComponent(Searchbtn)
                .addGap(37, 37, 37)
                .addComponent(Addbtn)
                .addGap(30, 30, 30)
                .addComponent(Clearbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {fieldCA, fieldCC, fieldCID, fieldCN, fieldS, fieldTC, fieldTech});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Addbtn, Deletebtn, Searchbtn, Updatebtn});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldCID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addComponent(fieldCN, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldCA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldTech, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldTC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(fieldS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Updatebtn)
                    .addComponent(Searchbtn)
                    .addComponent(Addbtn)
                    .addComponent(Clearbtn))
                .addGap(25, 25, 25))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Addbtn, Clearbtn, Deletebtn, Searchbtn, Updatebtn});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddbtnActionPerformed
        // TODO add your handling code here:
        Connection conn = DBConnection.getConnection();
        if(conn !=null);
        
         String client_id = fieldCID.getText();
         String client_name = fieldCN.getText();
        String client_contacts = fieldCC.getText();
        String client_address = fieldCA.getText();
        String technician_name = fieldTech.getText();
        String technician_contacts = fieldTC.getText();
        String services = fieldS.getText();
        String email_add = fieldEmail.getText();

    // Input Validation
    if (client_id.isEmpty() || client_name.isEmpty()|| client_contacts.isEmpty() || client_address.isEmpty() || technician_name.isEmpty()|| technician_contacts.isEmpty()|| services.isEmpty()|| email_add.isEmpty()) {
        JOptionPane.showMessageDialog(this,
                "Please fill in all the required fields",
                "Missing Information",
                JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        // Prepare and execute the SQL statement
        String sql = "INSERT INTO clients(client_id, client_name, client_contacts, client_address, technician_name, technician_contacts, services,email_add) VALUES (?, ?, ?, ?, ?, ?, ?,?)";
        PreparedStatement pstmt = conn.prepareStatement(sql);
        pstmt.setString(1, client_id);
        pstmt.setString(2, client_name);
        pstmt.setString(3, client_contacts);
        pstmt.setString(4, client_address);
        pstmt.setString(5, technician_name);
        pstmt.setString(6, technician_contacts);
        pstmt.setString(7, services);
         pstmt.setString(8, email_add);
        int rowsInserted = pstmt.executeUpdate();

        if (rowsInserted > 0) {
            JOptionPane.showMessageDialog(this, "A new Client was added successfully!");
            System.out.println("A new Client was added successfully!\n");

            // Update the table after successful database insertion
            DefaultTableModel model = (DefaultTableModel) tableClients.getModel();
            model.addRow(new Object[]{client_id, client_name, client_contacts, client_address, technician_name, technician_contacts, services,email_add});

            // Clear the text fields
            fieldCID.setText("");
            fieldCN.setText("");
            fieldCC.setText("");
            fieldCA.setText("");
            fieldTech.setText("");
            fieldTC.setText("");
            fieldS.setText("");
            fieldEmail.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "Failed to add Client! Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
        }

        pstmt.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "SQL Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        System.out.println("SQL Error: " + e.getMessage());
    } finally {
        DBConnection.closeConnection(conn);

    }
                                                              
    }//GEN-LAST:event_AddbtnActionPerformed

    private void SearchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchbtnActionPerformed
        // TODO add your handling code here:
        Connection conn =DBConnection.getConnection();
        if(conn !=null);
            try{
                String sql;
                PreparedStatement pstmt;
               
                if(fieldCID.getText().trim().isEmpty()){
                    sql = "SELECT * FROM clients";
                    pstmt = conn.prepareStatement(sql);
                   
                }else{
                   
                    sql = "SELECT * FROM clients WHERE client_id = ?";
                    pstmt = conn.prepareStatement(sql);
                    pstmt.setInt(1,Integer.parseInt(fieldCID.getText()));
                }
               
                ResultSet rs = pstmt.executeQuery();
               
                DefaultTableModel model = (DefaultTableModel)tableClients.getModel();
                model.setRowCount(0);
               
                while(rs.next()){
                   
                    int client_id = rs.getInt("client_id");
                    String client_name = rs.getString("client_name");
                    String client_contacts = rs.getString("client_contacts");
                    String client_address= rs.getString("client_address");
                    String technician_name = rs.getString("technician_name");
                    String technician_contacts = rs.getString("technician_contacts");
                    String services = rs.getString("services");
                    String email_add = rs.getString("email_add");
                   
                    model.addRow(new Object[]{client_id, client_name, client_contacts, client_address, technician_name, technician_contacts, services,email_add});
                   
                }
                rs.close();
                pstmt.close();
               
            }catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "SQL Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    System.out.println("SQL Error: " + e.getMessage());
            }finally {
                DBConnection.closeConnection(conn);
            }


    }//GEN-LAST:event_SearchbtnActionPerformed

    private void UpdatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdatebtnActionPerformed
        // TODO add your handling code here:
        String client_id            =      fieldCID.getText();
         String client_name         =      fieldCN.getText();
         String client_contacts     =      fieldCC.getText();
         String client_address      =      fieldCA.getText();
         String technician_name     =      fieldTech.getText();
         String technician_contacts =      fieldTC.getText();
        String services             =      fieldS.getText();
        String email_add            =      fieldEmail.getText();

       
       
        if(client_id.isEmpty() || client_name.isEmpty() || client_contacts.isEmpty() || client_address.isEmpty() || technician_name.isEmpty() || technician_contacts.isEmpty() || services.isEmpty()|| email_add.isEmpty()){
            JOptionPane.showMessageDialog(this,
                    "Please enter all fields",
                    "Try Again!",
                    JOptionPane.ERROR_MESSAGE);
        }else {
            DefaultTableModel model = (DefaultTableModel)tableClients.getModel();
            model.setRowCount(0);
            model.addRow(new Object[]{client_id, client_name, client_contacts, client_address, technician_name, technician_contacts, services,email_add});
           

        Connection conn = DBConnection.getConnection();
        if(conn !=null);
        try{
           
            String sql = "UPDATE clients SET client_name = ?, client_contacts = ?, client_address = ?, technician_name = ?, technician_contacts = ?, services = ?,email_add=? WHERE client_id = ?";
           
            PreparedStatement pstmt = conn.prepareStatement(sql);
           
            pstmt.setString(1,fieldCN.getText());
            pstmt.setString(2,fieldCC.getText());
            pstmt.setString(3,(fieldCA.getText()));
            pstmt.setString(4,fieldTech.getText());
            pstmt.setString(5,fieldTC.getText());
            pstmt.setString(6,fieldS.getText());
            pstmt.setString(7,fieldEmail.getText());
            pstmt.setInt(8,Integer.parseInt(fieldCID.getText()));
           
            int rowsUpdated = pstmt.executeUpdate();
            if(rowsUpdated > 0) {
                
                JOptionPane.showMessageDialog(this,"A new Client was Updated successfully!");
                System.out.println("A Client was updated successfully!\n");
                
                fieldCID.setText("");
            fieldCN.setText("");
            fieldCC.setText("");
            fieldCA.setText("");
            fieldTech.setText("");
            fieldTC.setText("");
            fieldS.setText("");
            fieldEmail.setText("");
                
                
        }else{
                System.out.println("No record found with the specified ID\n");
               
            }
            pstmt.close();
        }catch (SQLException | NumberFormatException e){
		JOptionPane.showMessageDialog(this, "SQL Error: " + e.getMessage(), "Error", 	JOptionPane.ERROR_MESSAGE);
                System.out.println("SQL Error: " + e.getMessage()) ;
        }finally{
            DBConnection.closeConnection(conn);
        }
       
           
           
        }

    }//GEN-LAST:event_UpdatebtnActionPerformed

    private void DeletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletebtnActionPerformed
        // TODO add your handling code here:
        Connection conn = DBConnection.getConnection();
if (conn != null) {
    try {
        String sql = "DELETE FROM clients WHERE client_id = ?";
        PreparedStatement pstmt = conn.prepareStatement(sql);

        int reservationId = Integer.parseInt(fieldCID.getText());

        // Confirmation dialog
        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete client ID " + reservationId + "?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            pstmt.setInt(1, reservationId);
            int rowsDeleted = pstmt.executeUpdate();

            if (rowsDeleted > 0) {
                System.out.println("A Client was deleted successfully!");
                // Update the table model
                int row = tableClients.getSelectedRow();
                if (row >= 0) {
                    DefaultTableModel model = (DefaultTableModel) tableClients.getModel();
                    model.removeRow(row);
                }
            } else {
                System.out.println("No record found with the specified ID");
                JOptionPane.showMessageDialog(this, "No record found with the specified ID", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    } catch (SQLException e) {
        System.out.println("SQL Error: " + e.getMessage());
        JOptionPane.showMessageDialog(this, "SQL Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    } finally {
        DBConnection.closeConnection(conn);
    }
} else {
    JOptionPane.showMessageDialog(this, "Connection to database failed.", "Error", JOptionPane.ERROR_MESSAGE);
}


    }//GEN-LAST:event_DeletebtnActionPerformed

    private void ClearbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearbtnActionPerformed
        // TODO add your handling code here:
            fieldCID.setText("");
            fieldCN.setText("");
            fieldCC.setText("");
            fieldCA.setText("");
            fieldTech.setText("");
            fieldTC.setText("");
            fieldS.setText("");
            fieldEmail.setText("");

    }//GEN-LAST:event_ClearbtnActionPerformed

    private void fieldCNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldCNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldCNActionPerformed

    private void fieldCAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldCAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldCAActionPerformed

    private void fieldCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldCCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldCCActionPerformed

    private void fieldCIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldCIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldCIDActionPerformed

    private void fieldEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldEmailActionPerformed

    private void fieldSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldSActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Addbtn;
    private javax.swing.JButton Clearbtn;
    private javax.swing.JButton Deletebtn;
    private javax.swing.JButton Searchbtn;
    private javax.swing.JButton Updatebtn;
    private javax.swing.JTextField fieldCA;
    private javax.swing.JTextField fieldCC;
    private javax.swing.JTextField fieldCID;
    private javax.swing.JTextField fieldCN;
    private javax.swing.JTextField fieldEmail;
    private javax.swing.JTextField fieldS;
    private javax.swing.JTextField fieldTC;
    private javax.swing.JTextField fieldTech;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableClients;
    // End of variables declaration//GEN-END:variables
}
